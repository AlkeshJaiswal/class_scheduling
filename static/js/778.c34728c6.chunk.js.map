{"version":3,"file":"static/js/778.c34728c6.chunk.js","mappings":"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","sources":["firebase.js","../node_modules/@coreui/icons/js/free/cil-lock-locked.js","views/pages/login/Login.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from 'firebase/app'\nimport { getDatabase } from 'firebase/database'\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: 'AIzaSyABGxGGKB0cN_FUw29dmHUsDDfBQyrkM-M',\n  authDomain: 'college-class-scheduling.firebaseapp.com',\n  databaseURL: 'https://college-class-scheduling-default-rtdb.firebaseio.com',\n  projectId: 'college-class-scheduling',\n  storageBucket: 'college-class-scheduling.appspot.com',\n  messagingSenderId: '762570299425',\n  appId: '1:762570299425:web:b3b3221d1b7669643f2b60',\n}\n\n// Initialize Firebase\nexport const app = initializeApp(firebaseConfig)\nexport const database = getDatabase(app)\n","export const cilLockLocked = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M384,200V144a128,128,0,0,0-256,0v56H88V328c0,92.635,75.364,168,168,168s168-75.365,168-168V200ZM160,144a96,96,0,0,1,192,0v56H160ZM392,328c0,74.99-61.01,136-136,136s-136-61.01-136-136V232H392Z' class='ci-primary'/>\"]","import React, { useEffect, useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n  CCardImage,\n  CFormFeedback,\n  CSpinner,\n  CAlert,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport { useForm } from 'react-hook-form'\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\n\nimport { app } from '../../../firebase'\nimport scsLogo from '../../../assets/images/scs-logo.png'\n\nconst Login = () => {\n  const dispatch = useDispatch()\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm()\n  const [formError, setFormError] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const navigate = useNavigate()\n\n  const onSubmit = async (data) => {\n    try {\n      setIsLoading(true)\n      const { Email: email, Password: password } = data\n      const auth = getAuth()\n      const user = await signInWithEmailAndPassword(auth, email, password)\n      setIsLoading(false)\n\n      const {\n        user: { accessToken, email: userEmail },\n      } = user\n      sessionStorage.setItem('token', accessToken)\n\n      dispatch({\n        type: 'set',\n        isAuthenticated: true,\n        user: {\n          token: accessToken,\n          email: userEmail,\n        },\n      })\n      navigate('/')\n    } catch (error) {\n      setIsLoading(false)\n      setFormError(() => error.message)\n    }\n  }\n\n  useEffect(() => {\n    const token = sessionStorage.getItem('token')\n    token && navigate('/')\n  }, [])\n\n  return (\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={6}>\n            <CCardGroup>\n              <CCard style={{ width: '18rem' }}>\n                <CCardImage src={scsLogo} />\n                <CCardBody>\n                  <CForm noValidate onSubmit={handleSubmit(onSubmit)}>\n                    <h1>Login</h1>\n                    <p className=\"text-medium-emphasis\">Sign In to your account</p>\n                    {formError && <CAlert color=\"danger\">{formError}</CAlert>}\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilUser} />\n                      </CInputGroupText>\n                      <CFormInput\n                        placeholder=\"Email\"\n                        {...register('Email', {\n                          required: 'Please enter email',\n                          pattern: {\n                            value: /^\\S+@\\S+$/i,\n                            message: 'Invalid Email',\n                          },\n                        })}\n                        className={`form-control ${errors.Email ? 'is-invalid' : ''}`}\n                      />\n                      {errors.Email && (\n                        <CFormFeedback invalid>{errors.Email?.message}</CFormFeedback>\n                      )}\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupText>\n                        <CIcon icon={cilLockLocked} />\n                      </CInputGroupText>\n                      <CFormInput\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        {...register('Password', { required: 'Please enter password' })}\n                        className={`form-control ${errors.Password ? 'is-invalid' : ''}`}\n                      />\n                      {errors.Password && (\n                        <CFormFeedback invalid>{errors.Password?.message}</CFormFeedback>\n                      )}\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs={6}>\n                        <CButton type=\"submit\" color=\"primary\" className=\"px-4\">\n                          Login\n                        </CButton>\n                      </CCol>\n                      <CCol xs={6}>{isLoading && <CSpinner />}</CCol>\n                    </CRow>\n                    <CRow>\n                      <CCol className=\"text-right\">\n                        <CButton color=\"link\" className=\"px-0\">\n                          Forgot password?\n                        </CButton>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Login\n"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","getDatabase","cilLockLocked","dispatch","useDispatch","useForm","register","handleSubmit","errors","watch","formState","useState","formError","setFormError","isLoading","setIsLoading","navigate","useNavigate","onSubmit","data","email","Email","password","Password","auth","getAuth","signInWithEmailAndPassword","user","accessToken","userEmail","sessionStorage","setItem","type","isAuthenticated","token","message","useEffect","getItem","className","md","style","width","src","scsLogo","noValidate","color","icon","cilUser","placeholder","required","pattern","value","invalid","xs"],"sourceRoot":""}