{"version":3,"file":"static/js/191.56eace93.chunk.js","mappings":"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","sources":["views/user/User.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react'\nimport {\n  CBadge,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CCollapse,\n  CForm,\n  CFormFeedback,\n  CFormInput,\n  CFormLabel,\n  CFormSelect,\n  CRow,\n  CSpinner,\n} from '@coreui/react'\nimport { CSmartTable } from '@coreui/react-pro'\nimport { useForm } from 'react-hook-form'\nimport { getAuth, createUserWithEmailAndPassword } from 'firebase/auth'\nimport { ref, set, onValue } from 'firebase/database'\n\nimport { app, database } from '../../firebase'\n\nconst User = () => {\n  const [details, setDetails] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [isTableLoading, setIsTableLoading] = useState(false)\n  const [users, setUsers] = useState([])\n\n  // const List = useMemo(() => usersData, [usersData])\n\n  // console.log(usersData)\n\n  useEffect(() => {\n    const usersRef = ref(database, 'users/')\n    onValue(usersRef, (snapshot) => {\n      snapshot.forEach(function (childSnapshot) {\n        let key = childSnapshot.key\n        setUsers.push({\n          id: key,\n          name: childSnapshot.val().username,\n          email: childSnapshot.val().email,\n          role: childSnapshot.val().email,\n          phone: childSnapshot.val().email,\n        })\n        setIsTableLoading(false)\n      })\n    })\n  }, [])\n\n  const columns = [\n    {\n      key: 'name',\n      _style: { width: '30%' },\n      _props: { color: 'primary', className: 'fw-semibold' },\n    },\n    { key: 'email', _style: { width: '20%' } },\n    { key: 'role', filter: false, sorter: false, _style: { width: '20%' } },\n    { key: 'phone', _style: { width: '20%' } },\n    {\n      key: 'show_details',\n      label: '',\n      _style: { width: '1%' },\n      filter: false,\n      sorter: false,\n      _props: { color: 'primary', className: 'fw-semibold' },\n    },\n  ]\n  // const usersData = [\n  //   { id: 0, name: 'John Doe', registered: '2018/01/01', role: 'Guest', status: 'Pending' },\n  //   {\n  //     id: 1,\n  //     name: 'Samppa Nori',\n  //     registered: '2018/01/01',\n  //     role: 'Member',\n  //     status: 'Active',\n  //     _props: { color: 'primary', align: 'middle' },\n  //   },\n  //   {\n  //     id: 2,\n  //     name: 'Estavan Lykos',\n  //     registered: '2018/02/01',\n  //     role: 'Staff',\n  //     status: 'Banned',\n  //     _cellProps: { all: { className: 'fw-semibold' }, name: { color: 'info' } },\n  //   },\n  //   { id: 3, name: 'Chetan Mohamed', registered: '2018/02/01', role: 'Admin', status: 'Inactive' },\n  //   {\n  //     id: 4,\n  //     name: 'Derick Maximinus',\n  //     registered: '2018/03/01',\n  //     role: 'Member',\n  //     status: 'Pending',\n  //   },\n  //   { id: 5, name: 'Friderik Dávid', registered: '2018/01/21', role: 'Staff', status: 'Active' },\n  //   { id: 6, name: 'Yiorgos Avraamu', registered: '2018/01/01', role: 'Member', status: 'Active' },\n  //   {\n  //     id: 7,\n  //     name: 'Avram Tarasios',\n  //     registered: '2018/02/01',\n  //     role: 'Staff',\n  //     status: 'Banned',\n  //     _props: { color: 'warning', align: 'middle' },\n  //   },\n  //   { id: 8, name: 'Quintin Ed', registered: '2018/02/01', role: 'Admin', status: 'Inactive' },\n  //   { id: 9, name: 'Enéas Kwadwo', registered: '2018/03/01', role: 'Member', status: 'Pending' },\n  //   { id: 10, name: 'Agapetus Tadeáš', registered: '2018/01/21', role: 'Staff', status: 'Active' },\n  //   { id: 11, name: 'Carwyn Fachtna', registered: '2018/01/01', role: 'Member', status: 'Active' },\n  //   { id: 12, name: 'Nehemiah Tatius', registered: '2018/02/01', role: 'Staff', status: 'Banned' },\n  //   { id: 13, name: 'Ebbe Gemariah', registered: '2018/02/01', role: 'Admin', status: 'Inactive' },\n  //   {\n  //     id: 14,\n  //     name: 'Eustorgios Amulius',\n  //     registered: '2018/03/01',\n  //     role: 'Member',\n  //     status: 'Pending',\n  //   },\n  //   { id: 15, name: 'Leopold Gáspár', registered: '2018/01/21', role: 'Staff', status: 'Active' },\n  //   { id: 16, name: 'Pompeius René', registered: '2018/01/01', role: 'Member', status: 'Active' },\n  //   { id: 17, name: 'Paĉjo Jadon', registered: '2018/02/01', role: 'Staff', status: 'Banned' },\n  //   {\n  //     id: 18,\n  //     name: 'Micheal Mercurius',\n  //     registered: '2018/02/01',\n  //     role: 'Admin',\n  //     status: 'Inactive',\n  //   },\n  //   {\n  //     id: 19,\n  //     name: 'Ganesha Dubhghall',\n  //     registered: '2018/03/01',\n  //     role: 'Member',\n  //     status: 'Pending',\n  //   },\n  //   { id: 20, name: 'Hiroto Šimun', registered: '2018/01/21', role: 'Staff', status: 'Active' },\n  //   { id: 21, name: 'Vishnu Serghei', registered: '2018/01/01', role: 'Member', status: 'Active' },\n  //   { id: 22, name: 'Zbyněk Phoibos', registered: '2018/02/01', role: 'Staff', status: 'Banned' },\n  //   { id: 23, name: 'Aulus Agmundr', registered: '2018/01/01', role: 'Member', status: 'Pending' },\n  //   {\n  //     id: 42,\n  //     name: 'Ford Prefect',\n  //     registered: '2001/05/25',\n  //     role: 'Alien',\n  //     status: \"Don't panic!\",\n  //   },\n  // ]\n\n  const getBadge = (status) => {\n    switch (status) {\n      case 'Active':\n        return 'success'\n      case 'Inactive':\n        return 'secondary'\n      case 'Pending':\n        return 'warning'\n      case 'Banned':\n        return 'danger'\n      default:\n        return 'primary'\n    }\n  }\n  const toggleDetails = (index) => {\n    const position = details.indexOf(index)\n    let newDetails = details.slice()\n    if (position !== -1) {\n      newDetails.splice(position, 1)\n    } else {\n      newDetails = [...details, index]\n    }\n    setDetails(newDetails)\n  }\n\n  const writeUserData = async (userId, name, email, address, phone, city, role) => {\n    try {\n      const response = await set(ref(database, 'users/' + userId), {\n        username: name,\n        email,\n        address,\n        phone,\n        city,\n        role,\n      })\n      console.log(response)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm()\n\n  const onSubmit = async (data, e) => {\n    try {\n      setIsLoading(true)\n      const { firstName, lastName, email, address, phone, city, role } = data\n      const name = firstName + ' ' + lastName\n      const password = firstName + '_' + lastName\n      const auth = getAuth(app)\n      const user = await createUserWithEmailAndPassword(auth, email, password)\n      const {\n        user: { uid },\n      } = user\n      await writeUserData(uid, name, email, address, phone, city, role)\n      setIsLoading(false)\n      e.target.reset()\n    } catch (error) {\n      setIsLoading(false)\n      console.log(error)\n    }\n  }\n\n  const addUserOptions = {\n    phone: {\n      required: 'Mobile Number required',\n      minLength: {\n        value: 10,\n        message: 'Invalid',\n      },\n      maxLength: {\n        value: 10,\n        message: 'Invalid',\n      },\n    },\n  }\n\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Add User</strong>\n          </CCardHeader>\n          <CCardBody>\n            <CForm className=\"row g-3\" noValidate onSubmit={handleSubmit(onSubmit)}>\n              <CCol md={6}>\n                <CFormInput\n                  placeholder=\"First name\"\n                  aria-label=\"First name\"\n                  {...register('firstName', { required: 'Please enter First Name' })}\n                  className={`form-control ${errors.firstName ? 'is-invalid' : ''}`}\n                />\n                {errors.firstName && (\n                  <CFormFeedback invalid>{errors.firstName?.message}</CFormFeedback>\n                )}\n              </CCol>\n              <CCol md={6}>\n                <CFormInput\n                  placeholder=\"Last name\"\n                  aria-label=\"Last name\"\n                  {...register('lastName', { required: 'Please enter Last Name' })}\n                  className={`form-control ${errors.lastName ? 'is-invalid' : ''}`}\n                />\n                {errors.lastName && (\n                  <CFormFeedback invalid>{errors.lastName?.message}</CFormFeedback>\n                )}\n              </CCol>\n              <CCol md={6}>\n                <CFormLabel htmlFor=\"inputEmail4\">Email</CFormLabel>\n                <CFormInput\n                  placeholder=\"Email Address\"\n                  type=\"email\"\n                  id=\"inputEmail4\"\n                  {...register('email', {\n                    required: 'Please enter Email Address',\n                    pattern: {\n                      value: /^\\S+@\\S+$/i,\n                      message: 'Invalid Email',\n                    },\n                  })}\n                  className={`form-control ${errors.email ? 'is-invalid' : ''}`}\n                />\n                {errors.email && <CFormFeedback invalid>{errors.email?.message}</CFormFeedback>}\n              </CCol>\n              <CCol md={6}>\n                <CFormLabel htmlFor=\"inputCity\">City</CFormLabel>\n                <CFormInput\n                  placeholder=\"City\"\n                  id=\"inputCity\"\n                  type=\"text\"\n                  {...register('city', { required: 'Please enter City' })}\n                  className={`form-control ${errors.city ? 'is-invalid' : ''}`}\n                />\n                {errors.city && <CFormFeedback invalid>{errors.city?.message}</CFormFeedback>}\n              </CCol>\n              <CCol md={12}>\n                <CFormLabel htmlFor=\"inputAddress\">Address</CFormLabel>\n                <CFormInput\n                  placeholder=\"Address\"\n                  id=\"inputAddress\"\n                  type=\"textarea\"\n                  {...register('address', { required: 'Please enter Address' })}\n                  className={`form-control ${errors.address ? 'is-invalid' : ''}`}\n                />\n                {errors.address && <CFormFeedback invalid>{errors.address?.message}</CFormFeedback>}\n              </CCol>\n              <CCol md={6}>\n                <CFormLabel htmlFor=\"inputZip\">Phone</CFormLabel>\n                <CFormInput\n                  id=\"inputZip\"\n                  type=\"number\"\n                  placeholder=\"Mobile Number\"\n                  {...register('phone', addUserOptions.phone)}\n                  className={`form-control ${errors.phone ? 'is-invalid' : ''}`}\n                />\n                {errors.phone && <CFormFeedback invalid>{errors.phone?.message}</CFormFeedback>}\n              </CCol>\n              <CCol md={6}>\n                <CFormLabel htmlFor=\"inputState\">Role</CFormLabel>\n                <CFormSelect\n                  id=\"inputState\"\n                  {...register('role', { required: 'Please Select Role' })}\n                  className={`form-control ${errors.role ? 'is-invalid' : ''}`}\n                >\n                  <option value=\"\">Choose...</option>\n                  <option value=\"admin\">Admin</option>\n                  <option value=\"teacher\">Teacher</option>\n                </CFormSelect>\n                {errors.role && <CFormFeedback invalid>{errors.role?.message}</CFormFeedback>}\n              </CCol>\n              <CCol xs={12}>\n                <CButton type=\"submit\">Submit</CButton>\n                {isLoading && <CSpinner />}\n              </CCol>\n            </CForm>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol>\n        <CCard>\n          <CCardHeader>Users</CCardHeader>\n          {!isTableLoading ? (\n            <CCardBody>\n              <CSmartTable\n                activePage={1}\n                // cleaner\n                clickableRows\n                columns={columns}\n                // columnFilter\n                columnSorter\n                // footer\n                items={users}\n                // itemsPerPageSelect\n                itemsPerPage={5}\n                pagination\n                scopedColumns={{\n                  status: (item) => (\n                    <td>\n                      <CBadge color={getBadge(item.status)}>{item.status}</CBadge>\n                    </td>\n                  ),\n                  show_details: (item) => {\n                    return (\n                      <td className=\"py-2\">\n                        <CButton\n                          color=\"primary\"\n                          variant=\"outline\"\n                          shape=\"square\"\n                          size=\"sm\"\n                          onClick={() => {\n                            toggleDetails(item._id)\n                          }}\n                        >\n                          {details.includes(item._id) ? 'Hide' : 'Show'}\n                        </CButton>\n                      </td>\n                    )\n                  },\n                  details: (item) => {\n                    return (\n                      <CCollapse visible={details.includes(item._id)}>\n                        <CCardBody>\n                          <h4>{item.username}</h4>\n                          <p className=\"text-muted\">User since: {item.registered}</p>\n                          <CButton size=\"sm\" color=\"info\">\n                            User Settings\n                          </CButton>\n                          <CButton size=\"sm\" color=\"danger\" className=\"ml-1\">\n                            Delete\n                          </CButton>\n                        </CCardBody>\n                      </CCollapse>\n                    )\n                  },\n                }}\n                // selectable\n                sorterValue={{ column: 'name', state: 'asc' }}\n                // tableFilter\n                tableHeadProps={{\n                  color: 'danger',\n                }}\n                tableProps={{\n                  striped: true,\n                  hover: true,\n                }}\n              />\n            </CCardBody>\n          ) : (\n            <CSpinner />\n          )}\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default User\n"],"names":["useState","details","setDetails","isLoading","setIsLoading","isTableLoading","setIsTableLoading","users","setUsers","useEffect","usersRef","ref","database","onValue","snapshot","forEach","childSnapshot","key","push","id","name","val","username","email","role","phone","getBadge","status","writeUserData","userId","address","city","set","response","console","log","useForm","register","handleSubmit","errors","formState","onSubmit","data","e","firstName","lastName","password","auth","getAuth","app","createUserWithEmailAndPassword","user","uid","target","reset","xs","className","noValidate","md","placeholder","required","invalid","message","htmlFor","type","pattern","value","minLength","maxLength","activePage","clickableRows","columns","_style","width","_props","color","filter","sorter","label","columnSorter","items","itemsPerPage","pagination","scopedColumns","item","show_details","variant","shape","size","onClick","index","position","indexOf","newDetails","slice","splice","toggleDetails","_id","includes","visible","registered","sorterValue","column","state","tableHeadProps","tableProps","striped","hover"],"sourceRoot":""}