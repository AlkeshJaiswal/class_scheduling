{"version":3,"file":"static/js/543.de4b51e1.chunk.js","mappings":"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","sources":["firebase.js","routes.js","components/AppBreadcrumb.js","components/AppContent.js","components/AppFooter.js","components/header/AppHeaderDropdown.js","components/AppHeader.js","components/AppSidebarNav.js","assets/brand/sygnet.js","_nav.js","components/AppSidebar.js","layout/DefaultLayout.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from 'firebase/app'\nimport { getDatabase } from 'firebase/database'\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: 'AIzaSyABGxGGKB0cN_FUw29dmHUsDDfBQyrkM-M',\n  authDomain: 'college-class-scheduling.firebaseapp.com',\n  databaseURL: 'https://college-class-scheduling-default-rtdb.firebaseio.com',\n  projectId: 'college-class-scheduling',\n  storageBucket: 'college-class-scheduling.appspot.com',\n  messagingSenderId: '762570299425',\n  appId: '1:762570299425:web:b3b3221d1b7669643f2b60',\n}\n\n// Initialize Firebase\nexport const app = initializeApp(firebaseConfig)\nexport const database = getDatabase(app)\n","import React from 'react'\n\nconst Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'))\nconst User = React.lazy(() => import('./views/user/User'))\n\nconst routes = [\n  { path: '/', exact: true, name: 'Home' },\n  { path: '/dashboard', name: 'Dashboard', element: Dashboard },\n  { path: '/user', name: 'User', element: User },\n]\n\nexport default routes\n","import React from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport routes from '../routes'\n\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst AppBreadcrumb = () => {\n  const currentLocation = useLocation().pathname\n\n  const getRouteName = (pathname, routes) => {\n    const currentRoute = routes.find((route) => route.path === pathname)\n    return currentRoute ? currentRoute.name : false\n  }\n\n  const getBreadcrumbs = (location) => {\n    const breadcrumbs = []\n    location.split('/').reduce((prev, curr, index, array) => {\n      const currentPathname = `${prev}/${curr}`\n      const routeName = getRouteName(currentPathname, routes)\n      routeName &&\n        breadcrumbs.push({\n          pathname: currentPathname,\n          name: routeName,\n          active: index + 1 === array.length ? true : false,\n        })\n      return currentPathname\n    })\n    return breadcrumbs\n  }\n\n  const breadcrumbs = getBreadcrumbs(currentLocation)\n\n  return (\n    <CBreadcrumb className=\"m-0 ms-2\">\n      <CBreadcrumbItem href=\"/\">Home</CBreadcrumbItem>\n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem\n            {...(breadcrumb.active ? { active: true } : { href: breadcrumb.pathname })}\n            key={index}\n          >\n            {breadcrumb.name}\n          </CBreadcrumbItem>\n        )\n      })}\n    </CBreadcrumb>\n  )\n}\n\nexport default React.memo(AppBreadcrumb)\n","import React, { Suspense } from 'react'\nimport { Navigate, Route, Routes } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n\nconst AppContent = () => {\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          {routes.map((route, idx) => {\n            return (\n              route.element && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  element={<route.element />}\n                />\n              )\n            )\n          })}\n          <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} />\n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst AppFooter = () => {\n  return (\n    <CFooter>\n      <div>\n        {/* <a href=\"https://coreui.io\" target=\"_blank\" rel=\"noopener noreferrer\">\n          CoreUI\n        </a>\n        <span className=\"ms-1\">&copy; 2022 creativeLabs.</span> */}\n      </div>\n      <div className=\"ms-auto\">\n        {/* <span className=\"me-1\">Powered by</span> */}\n        <a href=\"http://www.scs.dauniv.ac.in/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          SCSIT - School of Computer Science & Information Technology, DAVV\n        </a>\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(AppFooter)\n","import React, { useState } from 'react'\nimport {\n  CAvatar,\n  CBadge,\n  CDropdown,\n  CDropdownDivider,\n  CDropdownHeader,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n} from '@coreui/react'\nimport {\n  cilBell,\n  cilCreditCard,\n  cilCommentSquare,\n  cilEnvelopeOpen,\n  cilFile,\n  cilAccountLogout,\n  cilSettings,\n  cilTask,\n  cilUser,\n} from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport { getAuth, signOut } from 'firebase/auth'\nimport { useNavigate } from 'react-router-dom'\n\nimport { app } from '../../firebase'\nimport avatar8 from './../../assets/images/avatars/user.png'\n\nconst AppHeaderDropdown = () => {\n  const navigate = useNavigate()\n  const [isLoading, setIsLoading] = useState(false)\n\n  const handleLogout = () => {\n    const auth = getAuth()\n    signOut(auth)\n      .then(() => {\n        sessionStorage.removeItem('token')\n        navigate('/login')\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  return (\n    <CDropdown variant=\"nav-item\">\n      <CDropdownToggle placement=\"bottom-end\" className=\"py-0\" caret={false}>\n        <CAvatar src={avatar8} size=\"md\" />\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        <CDropdownHeader className=\"bg-light fw-semibold py-2\">Account</CDropdownHeader>\n        <CDropdownDivider />\n        <CDropdownItem href=\"#\" onClick={handleLogout}>\n          <CIcon icon={cilAccountLogout} className=\"me-2\" />\n          Logout\n        </CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  )\n}\n\nexport default AppHeaderDropdown\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilBell, cilEnvelopeOpen, cilList, cilMenu } from '@coreui/icons'\n\nimport { AppBreadcrumb } from './index'\nimport { AppHeaderDropdown } from './header/index'\nimport { logo } from 'src/assets/brand/logo'\n\nconst AppHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4\">\n      <CContainer fluid>\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        {/* <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\"> */}\n        {/* <CIcon icon={logo} height={48} alt=\"Logo\" /> */}\n        {/* </CHeaderBrand> */}\n        <CHeaderNav className=\"d-none d-md-flex me-auto\">\n          <CNavItem>\n            <CNavLink to=\"/dashboard\" component={NavLink}>\n              Dashboard\n            </CNavLink>\n          </CNavItem>\n        </CHeaderNav>\n        <CHeaderNav className=\"ms-3\">\n          <AppHeaderDropdown />\n        </CHeaderNav>\n      </CContainer>\n      <CHeaderDivider />\n      <CContainer fluid>\n        <AppBreadcrumb />\n      </CContainer>\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","export const sygnet = [\n  '160 160',\n  `\n  <title>coreui logo</title>\n  <g>\n    <g style=\"fill:#fff;\">\n      <path d=\"M125,47.091,86,24.5743a12,12,0,0,0-12,0L35,47.091a12.0336,12.0336,0,0,0-6,10.3923v45.0334a12.0335,12.0335,0,0,0,6,10.3923l39,22.5166a11.9993,11.9993,0,0,0,12,0l39-22.5166a12.0335,12.0335,0,0,0,6-10.3923V57.4833A12.0336,12.0336,0,0,0,125,47.091Zm-2,55.4257a4,4,0,0,1-2,3.464L82,128.4974a4,4,0,0,1-4,0L39,105.9807a4,4,0,0,1-2-3.464V57.4833a4,4,0,0,1,2-3.4641L78,31.5025a4,4,0,0,1,4,0l39,22.5167a4,4,0,0,1,2,3.4641Z\"/>\n      <path d=\"M103.0216,93.0379h-2.866a4,4,0,0,0-1.9246.4935L80.95,103.0167,61,91.4981V68.5206L80.95,57.002l17.2894,9.455a4,4,0,0,0,1.9192.4905h2.8632a2,2,0,0,0,2-2V62.2357a2,2,0,0,0-1.04-1.7547L84.793,49.9854a8.0391,8.0391,0,0,0-7.8428.09L57,61.5929A8.0243,8.0243,0,0,0,53,68.5216v22.976a8,8,0,0,0,4,6.9283l19.95,11.5185a8.0422,8.0422,0,0,0,7.8433.0879l19.19-10.5311a2,2,0,0,0,1.0378-1.7534v-2.71A2,2,0,0,0,103.0216,93.0379Z\"/>\n    </g>\n  </g>\n`,\n]\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilBell,\n  cilCalculator,\n  cilChartPie,\n  cilCursor,\n  cilDrop,\n  cilNotes,\n  cilPencil,\n  cilPuzzle,\n  cilSpeedometer,\n  cilStar,\n  cilUser,\n  cilPeople,\n  cilObjectGroup,\n  cilAlarm,\n} from '@coreui/icons'\nimport { CNavGroup, CNavItem, CNavTitle } from '@coreui/react'\n\nconst _nav = [\n  // {\n  //   component: CNavItem,\n  //   name: 'Dashboard',\n  //   to: '/dashboard',\n  //   icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n  //   badge: {\n  //     color: 'info',\n  //     text: 'NEW',\n  //   },\n  // },\n  // {\n  //   component: CNavTitle,\n  //   name: 'Theme',\n  // },\n  {\n    component: CNavItem,\n    name: 'Users',\n    to: '/user',\n    icon: <CIcon icon={cilUser} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Departments',\n    to: '/department',\n    icon: <CIcon icon={cilObjectGroup} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Class',\n    to: '/department/class',\n    icon: <CIcon icon={cilPeople} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Schedule',\n    to: '/schedule',\n    icon: <CIcon icon={cilAlarm} customClassName=\"nav-icon\" />,\n  },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Base',\n  //   to: '/base',\n  //   icon: <CIcon icon={cilPuzzle} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Accordion',\n  //       to: '/base/accordion',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Breadcrumb',\n  //       to: '/base/breadcrumbs',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Cards',\n  //       to: '/base/cards',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Carousel',\n  //       to: '/base/carousels',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Collapse',\n  //       to: '/base/collapses',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'List group',\n  //       to: '/base/list-groups',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Navs & Tabs',\n  //       to: '/base/navs',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Pagination',\n  //       to: '/base/paginations',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Placeholders',\n  //       to: '/base/placeholders',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Popovers',\n  //       to: '/base/popovers',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Progress',\n  //       to: '/base/progress',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Spinners',\n  //       to: '/base/spinners',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Tables',\n  //       to: '/base/tables',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Tooltips',\n  //       to: '/base/tooltips',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Buttons',\n  //   to: '/buttons',\n  //   icon: <CIcon icon={cilCursor} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Buttons',\n  //       to: '/buttons/buttons',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Buttons groups',\n  //       to: '/buttons/button-groups',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Dropdowns',\n  //       to: '/buttons/dropdowns',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Forms',\n  //   icon: <CIcon icon={cilNotes} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Form Control',\n  //       to: '/forms/form-control',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Select',\n  //       to: '/forms/select',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Checks & Radios',\n  //       to: '/forms/checks-radios',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Range',\n  //       to: '/forms/range',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Input Group',\n  //       to: '/forms/input-group',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Floating Labels',\n  //       to: '/forms/floating-labels',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Layout',\n  //       to: '/forms/layout',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Validation',\n  //       to: '/forms/validation',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavItem,\n  //   name: 'Charts',\n  //   to: '/charts',\n  //   icon: <CIcon icon={cilChartPie} customClassName=\"nav-icon\" />,\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Icons',\n  //   icon: <CIcon icon={cilStar} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'CoreUI Free',\n  //       to: '/icons/coreui-icons',\n  //       badge: {\n  //         color: 'success',\n  //         text: 'NEW',\n  //       },\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'CoreUI Flags',\n  //       to: '/icons/flags',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'CoreUI Brands',\n  //       to: '/icons/brands',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Notifications',\n  //   icon: <CIcon icon={cilBell} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Alerts',\n  //       to: '/notifications/alerts',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Badges',\n  //       to: '/notifications/badges',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Modal',\n  //       to: '/notifications/modals',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Toasts',\n  //       to: '/notifications/toasts',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavItem,\n  //   name: 'Widgets',\n  //   to: '/widgets',\n  //   icon: <CIcon icon={cilCalculator} customClassName=\"nav-icon\" />,\n  //   badge: {\n  //     color: 'info',\n  //     text: 'NEW',\n  //   },\n  // },\n  // {\n  //   component: CNavTitle,\n  //   name: 'Extras',\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Pages',\n  //   icon: <CIcon icon={cilStar} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Login',\n  //       to: '/login',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Register',\n  //       to: '/register',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Error 404',\n  //       to: '/404',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Error 500',\n  //       to: '/500',\n  //     },\n  //   ],\n  // },\n]\n\nexport default _nav\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { CSidebar, CSidebarBrand, CSidebarNav, CSidebarToggler } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport { logoNegative } from 'src/assets/brand/logo-negative'\nimport { sygnet } from 'src/assets/brand/sygnet'\nimport logo from 'src/assets/images/scs-logo.png'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\n\n// sidebar nav config\nimport navigation from '../_nav'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <CSidebarBrand className=\"d-none d-md-flex\" to=\"/\">\n        <CIcon className=\"sidebar-brand-full .bg-light\" icon={logo} height={35} />\n        <CIcon className=\"sidebar-brand-narrow\" icon={sygnet} height={35} />\n      </CSidebarBrand>\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n      <CSidebarToggler\n        className=\"d-none d-lg-flex\"\n        onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\n      />\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import React from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nconst DefaultLayout = () => {\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n          <AppContent />\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default DefaultLayout\n"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","getDatabase","path","exact","name","element","React","AppBreadcrumb","currentLocation","useLocation","pathname","breadcrumbs","location","split","reduce","prev","curr","index","array","currentPathname","routeName","routes","currentRoute","find","route","getRouteName","push","active","length","getBreadcrumbs","className","href","map","breadcrumb","key","AppContent","lg","Suspense","fallback","color","idx","to","replace","AppFooter","target","rel","navigate","useNavigate","useState","variant","placement","caret","src","avatar8","size","onClick","auth","getAuth","signOut","then","sessionStorage","removeItem","catch","error","console","log","icon","cilAccountLogout","dispatch","useDispatch","sidebarShow","useSelector","state","position","fluid","type","cilMenu","component","NavLink","AppSidebarNav","items","navLink","badge","text","navItem","item","rest","Component","navGroup","String","toggler","visible","startsWith","sygnet","CNavItem","cilUser","customClassName","cilObjectGroup","cilPeople","cilAlarm","AppSidebar","unfoldable","sidebarUnfoldable","onVisibleChange","logo","height","navigation"],"sourceRoot":""}